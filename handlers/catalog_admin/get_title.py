from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.exceptions import TelegramBadRequest
from aiogram.filters import Text
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from handlers.catalog_admin.utils import del_previous_message, escape_string
from keyboards.catalog_admin_keyboards import next_step_keyboard, cancel_keyboard
from states.adminStates import ManageProductStates

router = Router()


@router.callback_query(Text('enter_title'))
async def enter_title(call: CallbackQuery, state: FSMContext):
    await state.clear()

    await state.set_state(ManageProductStates.getTitle)

    answer_msg = await call.message.answer(
        text="‚úè –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:",
        reply_markup=cancel_keyboard()
    )

    await state.update_data(
        temp=answer_msg,
        product_title=None,
        product_photo=None,
        product_description=None,
        product_price=None,
        product_display=False,
        product_id=None,
    )


@router.message(F.text, ManageProductStates.getTitle)
async def confirm_title(msg: Message, state: FSMContext):
    data = await state.get_data()

    await del_previous_message(data, msg)

    try:
        answer_msg = await msg.answer(
            text=f"*–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞*: _{escape_string(msg.text)}_\n"
                 "\n–ß—Ç–æ–±—ã –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å –Ω–æ–≤–æ–µ\. –ï—Å–ª–∏ –≤—Å—ë –≤–µ—Ä–Ω–æ, –∏–¥—ë–º –¥–∞–ª—å—à–µ üëü",
            reply_markup=next_step_keyboard(callback_data='enter_photo'),
            parse_mode=ParseMode.MARKDOWN_V2
        )
    except TelegramBadRequest:
        answer_msg = await msg.answer(
            text='üò¨ –ò–∑–≤–∏–Ω–∏—Ç–µ –ø—Ä–æ–∏–∑–æ—à—ë–ª —Å–±–æ–π. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É',
            reply_markup=cancel_keyboard()
        )

    await state.update_data(previous=answer_msg, product_title=escape_string(msg.text))

